{
	"plot history": {
		"scope": "python",
		"prefix": "hist_plot",
		"body": [
			"def plot_results(history, title):",
			"\tplt.figure(figsize=(12, 4))",
			"\tplt.subplot(1, 2, 1)",
			"\tplt.plot(history.history[\"accuracy\"], label=\"Train Accuracy\")",
			"\tplt.plot(history.history[\"val_accuracy\"], label=\"Test Accuracy\")",
			"\tplt.title(f\"{title} - Accuracy\")",
			"\tplt.xlabel(\"Epoch\")",
			"\tplt.ylabel(\"Accuracy\")",
			"\tplt.legend()",
			"\t",
			"\tplt.subplot(1, 2, 2)",
			"\tplt.plot(history.history[\"loss\"], label=\"Train Loss\")",
			"\tplt.plot(history.history[\"val_loss\"], label=\"Test Loss\")",
			"\tplt.title(f\"{title} - Loss\")",
			"\tplt.xlabel(\"Epoch\")",
			"\tplt.ylabel(\"Loss\")",
			"\tplt.legend()",
			"\tplt.show()"
		],
		"description": "Отрисовывание графика обучения"
	},
	"early stop": {
		"scope": "python",
		"prefix": "early_stop",
		"body": [
			"early_stop = EarlyStopping(",
			"\tmonitor='${1:val_loss}',",
			"\tpatience=${2:20},",
			"\trestore_best_weights=True",
			")",
		],
		"description": "Ранняя остановка для защиты от переобучения"
	},
	"Basic FNN": {
        "scope": "python",
        "prefix": "fnn",
        "body": [
            "model_fnn = Sequential(",
				"\t[",
					"\t\tDense(${1:32}, activation=\"relu\", input_shape=(X_train.shape[1],)),",
					"\t\tDense(${1:32}, activation=\"relu\"),",
					"\t\tDense(y_train.shape[1], activation=\"${2:sigmoid}\"),",
				"\t]",
            ")",
            "",
            "model_fnn.compile(optimizer=\"adam\", loss=\"binary_crossentropy\", metrics=[\"accuracy\"])"
        ],
        "description": "Базовая FNN"
    },
	// Place your Рабочая область Big_data snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}